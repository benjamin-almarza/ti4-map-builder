"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[903],{"./src/stories/Galaxy.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EightPlayersWarp:()=>EightPlayersWarp,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Galaxy_stories});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js");const boardData_namespaceObject=JSON.parse('{"R7":{"2":{"normal":{"description":"A board smaller and more proportioned to modified two player TI.","source":"KingOfRohan","home_worlds":[22,31],"primary_tiles":[9,15],"secondary_tiles":[5,2,21,30,32,23],"tertiary_tiles":[10,16,14,8,7,13,12,18,1,4,6,3],"hyperlane_tiles":[]}},"3":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[22,28,34],"primary_tiles":[9,13,17],"secondary_tiles":[6,4,2,21,27,33,35,29,23],"tertiary_tiles":[8,12,16,18,14,10,1,3,5,15,11,7],"hyperlane_tiles":[]},"compact":{"description":"A more compact variant, that encourages fighting. Recommended to play with high resource values.","source":"Unknown","home_worlds":[10,14,18],"primary_tiles":[2,4,6,1,5,3],"secondary_tiles":[9,13,17,7,15,11],"tertiary_tiles":[12,16,8],"hyperlane_tiles":[]},"manta":{"description":"A flatter 3 player map without a top of the galaxy.","source":"arborecsoup","home_worlds":[28,25,31],"primary_tiles":[13,11,15],"secondary_tiles":[4,3,5,27,26,30,29,32,24],"tertiary_tiles":[12,10,16,14,6,2,1],"hyperlane_tiles":[]},"rex":{"description":"A competitive map with adjacencies.","source":"rex","home_worlds":[7,11,15],"primary_tiles":[8,12,16,6,4,2],"secondary_tiles":[18,10,14,31,25,19],"tertiary_tiles":[9,13,17,34,28,22],"hyperlane_tiles":[[1,"90A",0],[3,"90A",2],[5,"90A",1],[20,"85A",4],[24,"85A",4],[26,"85A",0],[30,"85A",0],[32,"85A",2],[36,"85A",2]]}},"4":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[23,27,32,36],"primary_tiles":[9,12,15,18,7,16,13,10],"secondary_tiles":[2,4,5,1,19,33,28,24,22,26,31,35],"tertiary_tiles":[3,6,17,14,11,8,20,25,29,34,30,21],"hyperlane_tiles":[]},"horizontal":{"description":"A slightly smaller than normal board which is aligned horizontally.","source":"Squishyish","home_worlds":[22,25,31,34],"primary_tiles":[9,11,15,17],"secondary_tiles":[6,5,3,2,21,26,30,35,33,32,24,23],"tertiary_tiles":[1,4,18,14,12,8,10,13,16,7],"hyperlane_tiles":[]},"vertical":{"description":"An smaller than normal board aligned vertically.","source":"Unknown","home_worlds":[21,26,30,35],"primary_tiles":[8,12,14,18],"secondary_tiles":[6,5,3,2,20,27,29,36,17,15,11,9],"tertiary_tiles":[1,4,16,10,7,13],"hyperlane_tiles":[]},"gaps":{"description":"A smaller than normal board aligned vertically, but with gaps to encourage fights with neighbors.","source":"Unknown","home_worlds":[21,26,30,35],"primary_tiles":[8,12,14,18],"secondary_tiles":[6,5,3,2,20,27,29,36,17,15,11,9],"tertiary_tiles":[16,10,7,13],"hyperlane_tiles":[]},"warp":{"description":"A smaller than normal board aligned vertically, but filled two hyperlanes to facilitate getting across the board.","source":"Unknown","home_worlds":[21,26,30,35],"primary_tiles":[8,12,14,18],"secondary_tiles":[6,5,3,2,20,27,29,36,17,15,11,9],"tertiary_tiles":[16,10,7,13],"hyperlane_tiles":[[1,"87A",1],[4,"88A",2]]},"double warp":{"description":"Split sides of the galaxy with many hyperlanes connecting the sides.","source":"Unknown","home_worlds":[22,25,31,34],"primary_tiles":[9,11,15,17,7,13],"secondary_tiles":[6,5,3,2,35,30,26,21,23,24,32,33],"tertiary_tiles":[10,16],"hyperlane_tiles":[[8,"89B",5],[12,"87B",4],[14,"90B",2],[18,"91B",1]]},"mini warp":{"description":"S more standard 4 player map, but with 4 hyperlanes to bring neighbors closer.","source":"Captbrownshoes","home_worlds":[36,23,27,32],"primary_tiles":[7,10,13,15,16,12,9,18],"secondary_tiles":[1,2,4,5,17,11],"tertiary_tiles":[24,26,33,35,6,3,19,31,28,22,21,29,30,20],"hyperlane_tiles":[[8,"91A",2],[14,"84B",5],[25,"85A",5],[34,"86A",2]]}},"5":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[21,25,28,31,35],"primary_tiles":[13,15,11,17,9],"secondary_tiles":[4,3,5,6,2,29,30,26,8,18,27,24,32,34,22],"tertiary_tiles":[1,16,7,10,12,14,33,23,20,36,19],"hyperlane_tiles":[]},"warp":{"description":"The modified version of the 5 player map from FFG for use with hyperlanes.","source":"Base Game","home_worlds":[19,22,25,31,34],"primary_tiles":[7,9,11,15,17],"secondary_tiles":[6,5,3,2,1,13,16,18,8,10],"tertiary_tiles":[20,23,26,32,35,33,30,24,21,36],"hyperlane_tiles":[[4,"86A",0],[12,"88A",0],[14,"87A",0],[27,"83A",0],[28,"85A",0],[29,"84A",0]],"overrideRatios":{"blueTileRatio":3,"redTileRatio":2}},"diamond":{"description":"A slightly smaller map than normal, which focuses on being closer to Mecatol Rex.","source":"Unknown","home_worlds":[21,24,28,32,35],"primary_tiles":[9,11,13,15,17],"secondary_tiles":[6,5,4,3,2,18,16,29,10,8,20,23,27,33,36],"tertiary_tiles":[1,7,12,14,19],"hyperlane_tiles":[]},"flat":{"description":"A wide map with a missing top and extra tiles on the sides.","source":"Good Sauce","home_worlds":[28,22,34,25,31],"primary_tiles":[13,15,11,9,17],"secondary_tiles":[6,2,3,5,4,27,24,32,56,42],"tertiary_tiles":[23,33,30,26,29,1,12,14,10,16,43,55,8,18,7,44,54],"hyperlane_tiles":[]},"notch":{"description":"A distinct notch separates the players at the top of the board, making their home systems still distant.","source":"Kazadoom","home_worlds":[28,20,36,24,32],"primary_tiles":[8,11,13,15,18],"secondary_tiles":[6,5,4,3,2,21,10,27,16,35,17,31,29,25,9],"tertiary_tiles":[1,12,14,34,30,26,22,23,33],"hyperlane_tiles":[]},"approaching":{"description":"A taller 5 player map which moves one player further from Mecatol Rex.","source":"Unknown","home_worlds":[21,24,28,32,35],"primary_tiles":[8,10,13,16,18],"secondary_tiles":[6,5,4,3,2,20,11,29,33,36,17,15,27,23,9],"tertiary_tiles":[1,12,7,14,19],"hyperlane_tiles":[]}},"6":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[19,22,25,28,31,34],"primary_tiles":[7,9,11,13,15,17],"secondary_tiles":[6,5,4,3,2,1,20,21,24,27,30,33],"tertiary_tiles":[18,16,14,12,10,8,23,26,29,32,35,36],"hyperlane_tiles":[]},"spiral":{"description":"More adjacent home planets, with the same path to the middle.","source":"9__Erebus","home_worlds":[20,23,26,29,32,35],"primary_tiles":[8,10,12,14,16,18,6,5,4,3,2,1],"secondary_tiles":[19,22,25,28,31,34,17,15,13,11,9,7],"tertiary_tiles":[27,24,21,36,33,30],"hyperlane_tiles":[]},"large":{"description":"The large version using the expansion tiles.","source":"Game Rules","home_worlds":[37,41,45,49,53,57],"primary_tiles":[19,22,25,28,31,34,17,15,13,11,9,7],"secondary_tiles":[60,40,44,48,52,56,58,54,50,46,42,38],"tertiary_tiles":[1,2,3,4,5,6,16,14,12,10,8,18,20,23,26,29,32,35,33,30,27,24,21,36,39,43,47,51,55,59],"hyperlane_tiles":[]}},"7":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[37,40,43,46,52,55,58],"primary_tiles":[19,21,23,25,31,33,35,18,16,15,11,10,8,7],"secondary_tiles":[1,2,3,4,5,6,57,54,51,47,44,41,38,60,39,42,45,53,56,59,20,36],"tertiary_tiles":[17,14,12,9,34,32,30,26,24,22,28],"hyperlane_tiles":[[13,"86A",0],[27,"88A",0],[29,"87A",0],[48,"83A",0],[49,"85A",0],[50,"84A",0]]},"warp":{"description":"The alternate map to use with 7 players which uses different hyperlanes.","source":"Game Rules","home_worlds":[37,22,25,49,52,55,58],"primary_tiles":[19,35,16,30,28,11,9],"secondary_tiles":[2,3,13,14,6,18,7,60,34,32,51,48,24,21],"tertiary_tiles":[23,26,50,31,56,59,38,36,17,15,29,12,10,8],"hyperlane_tiles":[[1,"85B",0],[4,"84B",0],[5,"90B",0],[20,"88B",0],[27,"86B",0],[33,"83B",5]]}},"8":{"normal":{"description":"Control what is around you for resources, and attack the center for victory points.","source":"Game Rules","home_worlds":[37,40,43,46,49,52,55,58],"primary_tiles":[19,35,33,30,28,26,24,21],"secondary_tiles":[2,3,4,5,6,1,7,18,16,14,13,12,10,8],"tertiary_tiles":[60,57,54,51,48,45,42,39,41,44,47,50,53,56,59,38,36,20,27,29,17,15,11,9,34,32,31,25,23,22],"hyperlane_tiles":[]},"warp":{"description":"The alternate map to use with 8 players which uses hyperlanes.","source":"Game Rules","home_worlds":[37,40,43,46,49,52,55,58],"primary_tiles":[19,21,10,26,28,30,16,35],"secondary_tiles":[18,6,14,13,12,3,8,7,60,39,23,25,48,51,32,34,59,56,31,50,47,44,22,38],"tertiary_tiles":[20,9,11,27,29,15,17,36],"hyperlane_tiles":[[1,"87A",1],[2,"90B",3],[4,"88A",2],[5,"89B",0],[24,"85B",5],[33,"83B",5]]}}}}');var lodash=__webpack_require__("./node_modules/lodash/lodash.js"),lodash_default=__webpack_require__.n(lodash);class Hex_Hex{constructor(q,r,s){this.q=void 0,this.r=void 0,this.s=void 0,this.blocked=void 0,this.text=void 0,this.image=void 0,this.props=void 0,this.state=void 0,this.pattern=void 0,this.q=q,this.r=r,this.s=s}}class Point{constructor(x,y){this.x=void 0,this.y=void 0,this.x=x,this.y=y}}const models_Point=Point;class HexUtils_HexUtils{static equals(a,b){return a.q===b.q&&a.r===b.r&&a.s===b.s}static add(a,b){return new Hex_Hex(a.q+b.q,a.r+b.r,a.s+b.s)}static subtract(a,b){return new Hex_Hex(a.q-b.q,a.r-b.r,a.s-b.s)}static multiply(a,k){return new Hex_Hex(a.q*k,a.r*k,a.s*k)}static lengths(hex){return(Math.abs(hex.q)+Math.abs(hex.r)+Math.abs(hex.s))/2}static distance(a,b){return HexUtils_HexUtils.lengths(HexUtils_HexUtils.subtract(a,b))}static direction(direction){return HexUtils_HexUtils.DIRECTIONS[(6+direction%6)%6]}static neighbor(hex,direction){return HexUtils_HexUtils.add(hex,HexUtils_HexUtils.direction(direction))}static neighbors(hex){const array=[];for(let i=0;i<HexUtils_HexUtils.DIRECTIONS.length;i+=1)array.push(HexUtils_HexUtils.neighbor(hex,i));return array}static round(hex){let rq=Math.round(hex.q),rr=Math.round(hex.r),rs=Math.round(hex.s);const qDiff=Math.abs(rq-hex.q),rDiff=Math.abs(rr-hex.r),sDiff=Math.abs(rs-hex.s);return qDiff>rDiff&&qDiff>sDiff?rq=-rr-rs:rDiff>sDiff?rr=-rq-rs:rs=-rq-rr,new Hex_Hex(rq,rr,rs)}static hexToPixel(hex,layout){const s=layout.spacing,M=layout.orientation;let x=(M.f0*hex.q+M.f1*hex.r)*layout.size.x,y=(M.f2*hex.q+M.f3*hex.r)*layout.size.y;return x*=s,y*=s,new Point(x+layout.origin.x,y+layout.origin.y)}static pixelToHex(point,layout){const M=layout.orientation,pt=new Point((point.x-layout.origin.x)/layout.size.x,(point.y-layout.origin.y)/layout.size.y),q=M.b0*pt.x+M.b1*pt.y,r=M.b2*pt.x+M.b3*pt.y,hex=new Hex_Hex(q,r,-q-r);return HexUtils_HexUtils.round(hex)}static lerp(a,b,t){return a+(b-a)*t}static hexLerp(a,b,t){return new Hex_Hex(HexUtils_HexUtils.lerp(a.q,b.q,t),HexUtils_HexUtils.lerp(a.r,b.r,t),HexUtils_HexUtils.lerp(a.s,b.s,t))}static getID(hex){return"".concat(hex.q,",").concat(hex.r,",").concat(hex.s)}}HexUtils_HexUtils.DIRECTIONS=[new Hex_Hex(1,0,-1),new Hex_Hex(1,-1,0),new Hex_Hex(0,-1,1),new Hex_Hex(-1,0,1),new Hex_Hex(-1,1,0),new Hex_Hex(0,1,-1)];var objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["width","height","viewBox"];function HexGrid(_ref){let{width=800,height=600,viewBox="-50 -50 100 100"}=_ref,props=(0,objectWithoutProperties.A)(_ref,_excluded);return(0,jsx_runtime.jsx)("svg",(0,objectSpread2.A)({className:"grid",width,height,viewBox,version:"1.1",xmlns:"http://www.w3.org/2000/svg"},props))}HexGrid.__docgenInfo={description:"Simple renders an `<svg>` container element for SVG graphics.\nThis component does not do anything special other than applying some defaults to the svg container if not provided.\nThe HexGrid should be used as the outer container for one or several `<Layouts>`.\n@param {Props} SVGProps\n@param {number} SVGProps.width - width of the SVG Container in px\n@param {number} SVGProps.height - height of the SVG container in px\n@param {string} SVGProps.viewBox - the container's internal coordinate system\n@returns",methods:[],displayName:"HexGrid",props:{width:{defaultValue:{value:"800",computed:!1},required:!1},height:{defaultValue:{value:"600",computed:!1},required:!1},viewBox:{defaultValue:{value:'"-50 -50 100 100"',computed:!1},required:!1}}};class Orientation{constructor(f0,f1,f2,f3,b0,b1,b2,b3,startAngle){this.f0=void 0,this.f1=void 0,this.f2=void 0,this.f3=void 0,this.b0=void 0,this.b1=void 0,this.b2=void 0,this.b3=void 0,this.startAngle=void 0,this.f0=f0,this.f1=f1,this.f2=f2,this.f3=f3,this.b0=b0,this.b1=b1,this.b2=b2,this.b3=b3,this.startAngle=startAngle}}const Layout_excluded=["size","flat","spacing","origin","children","className"],LAYOUT_FLAT=new Orientation(1.5,0,Math.sqrt(3)/2,Math.sqrt(3),2/3,0,-1/3,Math.sqrt(3)/3,0),LAYOUT_POINTY=new Orientation(Math.sqrt(3),Math.sqrt(3)/2,0,1.5,Math.sqrt(3)/3,-1/3,0,2/3,.5),defaultSize=new Point(10,10),defaultOrigin=new Point(0,0),defaultSpacing=1,Context=react.createContext({layout:{size:defaultSize,orientation:LAYOUT_FLAT,origin:defaultOrigin,spacing:defaultSpacing},points:""});function useLayoutContext(){return react.useContext(Context)}function Layout(_ref){let{size=defaultSize,flat=!0,spacing=defaultSpacing,origin=defaultOrigin,children,className}=_ref,rest=(0,objectWithoutProperties.A)(_ref,Layout_excluded);const orientation=flat?LAYOUT_FLAT:LAYOUT_POINTY,angle=flat?0:Math.PI/6,cornerCoords=function calculateCoordinates(circumradius){let angle=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,center=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Point(0,0);const corners=[];for(let i=0;i<6;i++){const x=circumradius*Math.cos(2*Math.PI*i/6+angle),y=circumradius*Math.sin(2*Math.PI*i/6+angle),point=new Point(center.x+x,center.y+y);corners.push(point)}return corners}(size.x,angle),points=cornerCoords.map((point=>"".concat(point.x,",").concat(point.y))).join(" "),childLayout=Object.assign({},rest,{orientation,size,origin,spacing});return(0,jsx_runtime.jsx)(Context.Provider,{value:{layout:childLayout,points},children:(0,jsx_runtime.jsx)("g",{className,children})})}Layout.__docgenInfo={description:"Provides LayoutContext for all descendands and renders child elements inside a <g> (Group) element",methods:[],displayName:"Layout",props:{children:{required:!0,tsType:{name:"union",raw:"| React.ReactElement\n| React.ReactElement[]\n| JSX.Element\n| JSX.Element[]",elements:[{name:"ReactReactElement",raw:"React.ReactElement"},{name:"Array",elements:[{name:"ReactReactElement",raw:"React.ReactElement"}],raw:"React.ReactElement[]"},{name:"JSX.Element"},{name:"Array",elements:[{name:"JSX.Element"}],raw:"JSX.Element[]"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""},flat:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},origin:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:"new Point(0, 0)",computed:!1}},size:{required:!1,tsType:{name:"signature",type:"object",raw:"{ x: number; y: number }",signature:{properties:[{key:"x",value:{name:"number",required:!0}},{key:"y",value:{name:"number",required:!0}}]}},description:"",defaultValue:{value:"new Point(10, 10)",computed:!1}},space:{required:!1,tsType:{name:"number"},description:""},spacing:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1.0",computed:!1}}}};const Path_excluded=["start","end"];function Path(_ref){let{start,end}=_ref,props=(0,objectWithoutProperties.A)(_ref,Path_excluded);const{layout}=useLayoutContext();return(0,jsx_runtime.jsx)("path",(0,objectSpread2.A)((0,objectSpread2.A)({},props),{},{d:function getPoints(){if(!start||!end)return"";let distance=HexUtils_HexUtils.distance(start,end),intersects=[],step=1/Math.max(distance,1);for(let i=0;i<=distance;i++)intersects.push(HexUtils_HexUtils.round(HexUtils_HexUtils.hexLerp(start,end,step*i)));let points="M";return points+=intersects.map((hex=>{let p=HexUtils_HexUtils.hexToPixel(hex,layout);return" ".concat(p.x,",").concat(p.y," ")})).join("L"),points}()}))}Path.__docgenInfo={description:"Renders an svg `<path>` component with points on the grid between a qrs-based `start` and `end` coordinates.",methods:[],displayName:"Path",props:{start:{required:!0,tsType:{name:"any"},description:""},end:{required:!1,tsType:{name:"any"},description:""}}};const Pattern_defaultSize=new models_Point(10,10);function Pattern(_ref){let{id,link,rotate=0,size=Pattern_defaultSize}=_ref;const{x,y}=size,rotation="rotate(".concat(rotate,")");return(0,jsx_runtime.jsx)("defs",{children:(0,jsx_runtime.jsx)("pattern",{id,patternUnits:"objectBoundingBox",x:0,y:0,width:x,height:y,patternTransform:rotation,children:(0,jsx_runtime.jsx)("image",{xlinkHref:link,x:0,y:0,width:2*x,height:2*y})})})}Pattern.__docgenInfo={description:"Defines an `<defs><pattern><image>` group (will not be rendered) in order to allow defining images.\nThe given id can be used on the `Hexagon` to render the image",methods:[],displayName:"Pattern",props:{id:{required:!0,tsType:{name:"string"},description:""},link:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"signature",type:"object",raw:"{ x: number; y: number }",signature:{properties:[{key:"x",value:{name:"number",required:!0}},{key:"y",value:{name:"number",required:!0}}]}},description:"",defaultValue:{value:"new Point(10, 10)",computed:!1}},rotate:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}}}};var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const Hexagon_excluded=["q","r","s","fill","cellStyle","className","children","onDragStart","onDragEnd","onDrop","onDragOver","onMouseEnter","onMouseLeave","onMouseOver","onClick","data","fillOpacity"];function Hexagon(props){const{q,r,s,fill,cellStyle,className,children,onDragStart,onDragEnd,onDrop,onDragOver,onMouseEnter,onMouseLeave,onMouseOver,onClick,data,fillOpacity}=props,rest=(0,objectWithoutProperties.A)(props,Hexagon_excluded),{layout,points}=useLayoutContext(),{hex,pixel}=react.useMemo((()=>{const hex=new Hex_Hex(q,r,s);return{hex,pixel:HexUtils_HexUtils.hexToPixel(hex,layout)}}),[q,r,s,layout]),state={hex},fillId=fill?"url(#".concat(fill,")"):void 0;return(0,jsx_runtime.jsx)("g",(0,objectSpread2.A)((0,objectSpread2.A)((0,objectSpread2.A)({className:classnames_default()("hexagon-group",className),transform:"translate(".concat(pixel.x,", ").concat(pixel.y,")")},rest),{draggable:!0}),{},{onDragStart:e=>{if(onDragStart){const targetProps={hex,pixel,data,fill,className};e.dataTransfer.setData("hexagon",JSON.stringify(targetProps)),onDragStart(e,{data,state,props})}},onDragEnd:e=>{if(onDragEnd){e.preventDefault();const success="none"!==e.dataTransfer.dropEffect;onDragEnd(e,{state,props},success)}},onDrop:e=>{if(onDrop){e.preventDefault();const target=JSON.parse(e.dataTransfer.getData("hexagon"));onDrop(e,{data,state,props},target)}},onDragOver:e=>{onDragOver&&onDragOver(e,{data,state,props})},onMouseEnter:e=>{onMouseEnter&&onMouseEnter(e,{data,state,props})},onClick:e=>{onClick&&onClick(e,{data,state,props})},onMouseOver:e=>{onMouseOver&&onMouseOver(e,{data,state,props})},onMouseLeave:e=>{onMouseLeave&&onMouseLeave(e,{data,state,props})},children:(0,jsx_runtime.jsxs)("g",{className:"hexagon",children:[(0,jsx_runtime.jsx)("polygon",{points,fill:fillId,style:cellStyle}),children]})}))}Hexagon.__docgenInfo={description:"Renders a Hexagon cell at the given rqs-based coordinates.",methods:[],displayName:"Hexagon",props:{q:{required:!0,tsType:{name:"number"},description:""},r:{required:!0,tsType:{name:"number"},description:""},s:{required:!0,tsType:{name:"number"},description:""},fill:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},cellStyle:{required:!1,tsType:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}]},description:""},data:{required:!1,tsType:{name:"any"},description:""},onMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onMouseLeave",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onClick",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onDragStart",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragEnd",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragOver",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"}],return:{name:"void"}}},description:""},onMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onMouseLeave",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onClick",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onDragStart",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragEnd",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragOver",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"}],return:{name:"void"}}},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onMouseLeave",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onClick",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onDragStart",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragEnd",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragOver",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"}],return:{name:"void"}}},description:""},onDragStart:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onMouseLeave",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onDragStart",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragEnd",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragOver",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}}},description:""},onDragEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onMouseLeave",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onDragStart",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragEnd",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragOver",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}}},description:""},onDragOver:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onMouseLeave",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onDragStart",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragEnd",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDragOver",value:{name:"HexagonDragEventHandler",required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}}},description:""},onDrop:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"any"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onMouseLeave",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"any"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"any"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"onDragStart",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragEnd",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragOver",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDrop",value:{name:"HexagonDragDropEventHandler",required:!1}},{key:"onMouseOver",value:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"any"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"H"},name:"h"}],return:{name:"void"}},required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}}},description:""},onMouseOver:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  event: React.MouseEvent<T, globalThis.MouseEvent>,\n  h: H,\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<T, globalThis.MouseEvent>",elements:[{name:"T"},{name:"globalThis.MouseEvent"}]},name:"event"},{type:{name:"signature",type:"object",raw:"{ data?: any; state: { hex: Hex }; props: HexagonProps }",signature:{properties:[{key:"data",value:{name:"any",required:!1}},{key:"state",value:{name:"signature",type:"object",raw:"{ hex: Hex }",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}}]},required:!0}},{key:"props",value:{name:"signature",type:"object",raw:"{\n  q: number\n  r: number\n  s: number\n  fill?: string\n  className?: string\n  cellStyle?: React.CSSProperties | undefined\n  data?: any\n  onMouseEnter?: HexagonMouseEventHandler\n  onMouseLeave?: HexagonMouseEventHandler\n  onClick?: HexagonMouseEventHandler\n  onDragStart?: HexagonDragEventHandler\n  onDragEnd?: HexagonDragEventHandler\n  onDragOver?: HexagonDragEventHandler\n  onDrop?: HexagonDragDropEventHandler<any, TargetProps>\n  onMouseOver?: HexagonMouseEventHandler\n  children?: React.ReactNode | React.ReactNode[]\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}},{key:"cellStyle",value:{name:"union",raw:"React.CSSProperties | undefined",elements:[{name:"ReactCSSProperties",raw:"React.CSSProperties"},{name:"undefined"}],required:!1}},{key:"data",value:{name:"any",required:!1}},{key:"onMouseEnter",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onMouseLeave",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onClick",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"onDragStart",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragEnd",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDragOver",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData?: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"T"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"AdditionalData"},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onDrop",value:{name:"signature",type:"function",raw:"(\n  event: React.DragEvent<T>,\n  h: H,\n  additionalData: AdditionalData,\n) => void",signature:{arguments:[{type:{name:"ReactDragEvent",raw:"React.DragEvent<T>",elements:[{name:"any"}]},name:"event"},{type:{name:"H"},name:"h"},{type:{name:"signature",type:"object",raw:"{\n  hex: Hex\n  pixel: Point\n  data?: any\n  fill?: string\n  className?: string\n}",signature:{properties:[{key:"hex",value:{name:"Hex",required:!0}},{key:"pixel",value:{name:"Point",required:!0}},{key:"data",value:{name:"any",required:!1}},{key:"fill",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},name:"additionalData"}],return:{name:"void"}},required:!1}},{key:"onMouseOver",value:{name:"HexagonMouseEventHandler",required:!1}},{key:"children",value:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}],required:!1}}]},required:!0}}]}},name:"h"}],return:{name:"void"}}},description:""},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}]},description:""}}};var taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const Text_excluded=["children","x","y"];var _templateObject;const T=styled_components_browser_esm.Ay.text(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n  font-size: 0.2em;\n  fill: #000;\n  fill-opacity: 0.9;\n  transition: fill-opacity .2s;\n"])));function Text(props){const{children,x,y}=props,rest=(0,objectWithoutProperties.A)(props,Text_excluded);return(0,jsx_runtime.jsx)(T,(0,objectSpread2.A)((0,objectSpread2.A)({x:x||0,y:y||"0.3em",textAnchor:"middle"},rest),{},{children}))}Text.__docgenInfo={description:"",methods:[],displayName:"Text",props:{children:{required:!0,tsType:{name:"union",raw:"string | React.ReactNode | React.ReactNode[]",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}]},description:""},x:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},y:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};const raceData_namespaceObject=JSON.parse('{"r4":{"The Federation of Sol":1,"The Mentak Coalition":2,"The Yin Brotherhood":3,"The Embers of Muaat":4,"The Arborec":5,"The L1Z1X Mindnet":6,"The Winnu":7,"The Nekro Virus":8,"The Naalu Collective":9,"The Barony of Letnev":10,"The Clan of Saar":11,"The Universities of Jol-Nar":12,"Sardakk N\'orr":13,"The Xxcha Kingdom":14,"The Yssaril Tribes":15,"The Emirates of Hacan":16,"The Ghosts of Creuss":17,"The Mahact Gene-sorcerers":52,"The Nomad":53,"The Vuil\'raith Cabal":54,"The Titans of Ul":55,"The Empyrean":56,"The Naaz-Rokha Alliance":57,"The Argent Flight":58,"The Veldyr Sovereignty":3201,"The Free Systems Compact":3202,"The Li-Zho Dynasty":3203,"The Kortali Tribunal":3204,"The Ghemina Raiders":3205,"The Vaden Banking Clans":3206,"The Glimmer of Mortheus":3207,"The Augurs of Ilyxum":3208,"The Shipwrights of Axis":3209,"The Olradin League":3210,"The Myko-Mentori":3211,"The Tnelis Syndicate":3212,"The Savages of Cymiae":3213,"Roh\'Dhna Mechatronics":3214,"The Zelian Purifier":3215,"The Vaylerian Scourge":3216,"The Florzen Profiteers":3217,"The Dih-Mohn Flotilla":3218,"The Celdauri Trade Confederation":3219,"The Nivyn Star Kings":3220,"The Mirveda Protectorate":3221,"The L\'tokk Khrask":3222,"The Kollecc Society":3223,"The Zealots of Rhodun":3224,"The Berserkers of Kjalengard":3226,"The Bentor Conglomerate":3227,"The Nokar Sellships":3228,"The Gledge Union":3229,"The Lanefir Remnants":3230,"The Kyro Sodality":3231,"The Ghoti Wayfarers":3232,"The Monks of Kolume":3233,"The Cheiran Hordes":3234,"The Edyn Mandate":3235}}'),MECATOL_REX_TILE="18",EMPTY_TILE="0",DIRECTIONS=[new Hex_Hex(1,0,-1),new Hex_Hex(1,-1,0),new Hex_Hex(0,-1,1),new Hex_Hex(-1,0,1),new Hex_Hex(-1,1,0),new Hex_Hex(0,1,-1)];function ring(_ref2){let{centre,radius}=_ref2;const directions=function changeOrder(_ref){let{arr,start=1,desc=!0}=_ref;const s=start%arr.length,a=[...lodash_default().takeRight(arr,arr.length-s),...lodash_default().take(arr,s)];return desc?lodash_default().reverse([...a]):a}({arr:DIRECTIONS}),hex=HexUtils_HexUtils.add(centre,HexUtils_HexUtils.multiply(directions[4],radius)),aaa=directions.flatMap((direction=>lodash_default().range(0,radius).map((()=>direction)))),{list}=aaa.reduce(((_ref3,direction)=>{let{hex,list}=_ref3;return{hex:HexUtils_HexUtils.add(hex,direction),list:[...list,hex]}}),{hex,list:[hex]}),[,...l]=list;return l}function init(_ref4){let{rings,map:{home_worlds,hyperlane_tiles,primary_tiles,secondary_tiles,tertiary_tiles},factions}=_ref4;const centre=new Hex_Hex(0,0,0),spiral=lodash_default().range(1,rings+1).reduce(((accum,radius)=>[...accum,...ring({centre,radius})]),[centre]);function addCoordinates(props){const{position}=props,{q,r,s}=spiral[position];return(0,objectSpread2.A)((0,objectSpread2.A)({},props),{},{coordinates:{q,r,s}})}const homes=home_worlds.map(((position,i)=>{const faction=factions[i],system=raceData_namespaceObject.r4[faction];return{position,source:"".concat(system)}})).map(addCoordinates),hyperlanes=hyperlane_tiles.map((_ref5=>{let[position,source]=_ref5;return{position,source}})).map(addCoordinates),ringsStates=[primary_tiles,secondary_tiles,tertiary_tiles].map((ring=>ring.map((position=>({position,source:EMPTY_TILE}))).map(addCoordinates))),factionsSystems=factions.map((faction=>raceData_namespaceObject.r4[faction]));return{homes,hyperlanes,rings:ringsStates,tiles:[...[MECATOL_REX_TILE,EMPTY_TILE,...home_worlds,...factionsSystems].map((source=>({source:"".concat(source)}))),...hyperlane_tiles.map((_ref6=>{let[,source,rotate]=_ref6;return{source,rotate:60*rotate}}))]}}function galaxyReducer(state,action){const{type}=action;if("INIT"===type){const{data}=action;return(0,objectSpread2.A)((0,objectSpread2.A)({},state),{},{boardMap:init(data)})}return type}function Tiles(_ref){let{tiles}=_ref;const elements=tiles.map((_ref2=>{let{source,rotate=0}=_ref2;const link="./tiles/ST_".concat(source,".webp");return(0,jsx_runtime.jsx)(Pattern,{id:source,link,rotate:Number(rotate)})}));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:elements})}function Spaces(_ref){let{spaces}=_ref;const elements=spaces.map((space=>{const{position,source,coordinates:{q,r,s}}=space;return(0,jsx_runtime.jsx)(Hexagon,{q,r,s,fill:source},position)}));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:elements})}Tiles.__docgenInfo={description:"",methods:[],displayName:"Tiles",props:{tiles:{required:!0,tsType:{name:"Array",raw:"BoardMap['tiles']"},description:""}}},Spaces.__docgenInfo={description:"",methods:[],displayName:"Spaces",props:{spaces:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n    position: number\n    source: string\n    coordinates: {\n        q: number\n        r: number\n        s: number\n    },\n}",signature:{properties:[{key:"position",value:{name:"number",required:!0}},{key:"source",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"signature",type:"object",raw:"{\n    q: number\n    r: number\n    s: number\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}}]},required:!0}}]}}],raw:"SpaceState[]"},description:""}}};const mecatol={position:0,source:"18",coordinates:{q:0,r:0,s:0}};function GalaxyDisplay(_ref){let{tiles,homes,rings,hyperlanes}=_ref;const spaces=[mecatol,...homes,...rings.flatMap((ring=>ring)),...hyperlanes];return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(HexGrid,{width:1200,height:800,viewBox:"-100 -100 200 200",children:[(0,jsx_runtime.jsx)(Layout,{size:{x:10,y:10},flat:!0,spacing:1,origin:{x:0,y:0},children:(0,jsx_runtime.jsx)(Spaces,{spaces})}),(0,jsx_runtime.jsx)(Tiles,{tiles})]})})}function Galaxy(_ref){let{factions,mapType}=_ref;const[state,update]=(0,react.useReducer)(galaxyReducer,{});return(0,react.useEffect)((()=>{var _boards$factions$leng;const boards=boardData_namespaceObject.R7,map=null==boards||null===(_boards$factions$leng=boards[factions.length])||void 0===_boards$factions$leng?void 0:_boards$factions$leng[mapType];update({type:"INIT",data:{rings:5,factions,map}})}),[]),state.boardMap?(0,jsx_runtime.jsx)(GalaxyDisplay,(0,objectSpread2.A)({},state.boardMap)):null}GalaxyDisplay.__docgenInfo={description:"",methods:[],displayName:"GalaxyDisplay",props:{homes:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n    position: number\n    source: string\n    coordinates: {\n        q: number\n        r: number\n        s: number\n    },\n}",signature:{properties:[{key:"position",value:{name:"number",required:!0}},{key:"source",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"signature",type:"object",raw:"{\n    q: number\n    r: number\n    s: number\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}}]},required:!0}}]}}],raw:"SpaceState[]"},description:""},hyperlanes:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n    position: number\n    source: string\n    coordinates: {\n        q: number\n        r: number\n        s: number\n    },\n}",signature:{properties:[{key:"position",value:{name:"number",required:!0}},{key:"source",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"signature",type:"object",raw:"{\n    q: number\n    r: number\n    s: number\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}}]},required:!0}}]}}],raw:"SpaceState[]"},description:""},rings:{required:!0,tsType:{name:"Array",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n    position: number\n    source: string\n    coordinates: {\n        q: number\n        r: number\n        s: number\n    },\n}",signature:{properties:[{key:"position",value:{name:"number",required:!0}},{key:"source",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"signature",type:"object",raw:"{\n    q: number\n    r: number\n    s: number\n}",signature:{properties:[{key:"q",value:{name:"number",required:!0}},{key:"r",value:{name:"number",required:!0}},{key:"s",value:{name:"number",required:!0}}]},required:!0}}]}}],raw:"SpaceState[]"}],raw:"SpaceState[][]"},description:""},tiles:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ source: string, rotate?: number }",signature:{properties:[{key:"source",value:{name:"string",required:!0}},{key:"rotate",value:{name:"number",required:!1}}]}}],raw:"TileState[]"},description:""}}},Galaxy.__docgenInfo={description:"",methods:[],displayName:"Galaxy",props:{factions:{required:!0,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"Faction[]"},description:""},mapType:{required:!0,tsType:{name:"string"},description:""}}};const Galaxy_stories={title:"Components/Galaxy",component:Galaxy,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}},EightPlayersWarp={args:{factions:["The Arborec","The Barony of Letnev","The Clan of Saar","The Embers of Muaat","The Emirates of Hacan","The Federation of Sol","The Ghosts of Creuss","Sardakk N'orr"],mapType:"warp"}},__namedExportsOrder=["EightPlayersWarp"];EightPlayersWarp.parameters={...EightPlayersWarp.parameters,docs:{...EightPlayersWarp.parameters?.docs,source:{originalSource:'{\n  args: {\n    factions: ["The Arborec", "The Barony of Letnev", "The Clan of Saar", "The Embers of Muaat", "The Emirates of Hacan", "The Federation of Sol", "The Ghosts of Creuss", "Sardakk N\'orr"],\n    mapType: "warp"\n  }\n}',...EightPlayersWarp.parameters?.docs?.source}}}}}]);